.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "IO::Pipe 3"
.TH IO::Pipe 3 2023-05-26 "perl v5.38.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
IO::Pipe \- supply object methods for pipes
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&        use IO::Pipe;
\&
\&        $pipe = IO::Pipe\->new();
\&
\&        if($pid = fork()) { # Parent
\&            $pipe\->reader();
\&
\&            while(<$pipe>) {
\&                ...
\&            }
\&
\&        }
\&        elsif(defined $pid) { # Child
\&            $pipe\->writer();
\&
\&            print $pipe ...
\&        }
\&
\&        or
\&
\&        $pipe = IO::Pipe\->new();
\&
\&        $pipe\->reader(qw(ls \-l));
\&
\&        while(<$pipe>) {
\&            ...
\&        }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\f(CW\*(C`IO::Pipe\*(C'\fR provides an interface to creating pipes between
processes.
.SH CONSTRUCTOR
.IX Header "CONSTRUCTOR"
.IP "new ( [READER, WRITER] )" 4
.IX Item "new ( [READER, WRITER] )"
Creates an \f(CW\*(C`IO::Pipe\*(C'\fR, which is a reference to a newly created symbol
(see the Symbol package). \f(CW\*(C`IO::Pipe::new\*(C'\fR optionally takes two
arguments, which should be objects blessed into \f(CW\*(C`IO::Handle\*(C'\fR, or a
subclass thereof. These two objects will be used for the system call
to \f(CW\*(C`pipe\*(C'\fR. If no arguments are given then method \f(CW\*(C`handles\*(C'\fR is called
on the new \f(CW\*(C`IO::Pipe\*(C'\fR object.
.Sp
These two handles are held in the array part of the GLOB until either
\&\f(CW\*(C`reader\*(C'\fR or \f(CW\*(C`writer\*(C'\fR is called.
.SH METHODS
.IX Header "METHODS"
.IP "reader ([ARGS])" 4
.IX Item "reader ([ARGS])"
The object is re-blessed into a sub-class of \f(CW\*(C`IO::Handle\*(C'\fR, and becomes a
handle at the reading end of the pipe. If \f(CW\*(C`ARGS\*(C'\fR are given then \f(CW\*(C`fork\*(C'\fR
is called and \f(CW\*(C`ARGS\*(C'\fR are passed to exec.
.IP "writer ([ARGS])" 4
.IX Item "writer ([ARGS])"
The object is re-blessed into a sub-class of \f(CW\*(C`IO::Handle\*(C'\fR, and becomes a
handle at the writing end of the pipe. If \f(CW\*(C`ARGS\*(C'\fR are given then \f(CW\*(C`fork\*(C'\fR
is called and \f(CW\*(C`ARGS\*(C'\fR are passed to exec.
.IP "handles ()" 4
.IX Item "handles ()"
This method is called during construction by \f(CW\*(C`IO::Pipe::new\*(C'\fR
on the newly created \f(CW\*(C`IO::Pipe\*(C'\fR object. It returns an array of two objects
blessed into \f(CW\*(C`IO::Pipe::End\*(C'\fR, or a subclass thereof.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
IO::Handle
.SH AUTHOR
.IX Header "AUTHOR"
Graham Barr. Currently maintained by the Perl Porters.  Please report all
bugs at <https://github.com/Perl/perl5/issues>.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 1996\-8 Graham Barr <gbarr@pobox.com>. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "IPC::SysV 3"
.TH IPC::SysV 3 2020-12-28 "perl v5.38.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
IPC::SysV \- System V IPC constants and system calls
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&  use IPC::SysV qw(IPC_STAT IPC_PRIVATE);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\f(CW\*(C`IPC::SysV\*(C'\fR defines and conditionally exports all the constants
defined in your system include files which are needed by the SysV
IPC calls.  Common ones include
.PP
.Vb 4
\&  IPC_CREAT IPC_EXCL IPC_NOWAIT IPC_PRIVATE IPC_RMID IPC_SET IPC_STAT
\&  GETVAL SETVAL GETPID GETNCNT GETZCNT GETALL SETALL
\&  SEM_A SEM_R SEM_UNDO
\&  SHM_RDONLY SHM_RND SHMLBA
.Ve
.PP
and auxiliary ones
.PP
.Vb 3
\&  S_IRUSR S_IWUSR S_IRWXU
\&  S_IRGRP S_IWGRP S_IRWXG
\&  S_IROTH S_IWOTH S_IRWXO
.Ve
.PP
but your system might have more.
.IP "ftok( PATH )" 4
.IX Item "ftok( PATH )"
.PD 0
.IP "ftok( PATH, ID )" 4
.IX Item "ftok( PATH, ID )"
.PD
Return a key based on PATH and ID, which can be used as a key for
\&\f(CW\*(C`msgget\*(C'\fR, \f(CW\*(C`semget\*(C'\fR and \f(CW\*(C`shmget\*(C'\fR. See \fBftok\fR\|(3).
.Sp
If ID is omitted, it defaults to \f(CW1\fR. If a single character is
given for ID, the numeric value of that character is used.
.IP "shmat( ID, ADDR, FLAG )" 4
.IX Item "shmat( ID, ADDR, FLAG )"
Attach the shared memory segment identified by ID to the address
space of the calling process. See \fBshmat\fR\|(2).
.Sp
ADDR should be \f(CW\*(C`undef\*(C'\fR unless you really know what you're doing.
.IP "shmdt( ADDR )" 4
.IX Item "shmdt( ADDR )"
Detach the shared memory segment located at the address specified
by ADDR from the address space of the calling process. See \fBshmdt\fR\|(2).
.IP "memread( ADDR, VAR, POS, SIZE )" 4
.IX Item "memread( ADDR, VAR, POS, SIZE )"
Reads SIZE bytes from a memory segment at ADDR starting at position POS.
VAR must be a variable that will hold the data read. Returns true if
successful, or false if there is an error. \fBmemread()\fR taints the variable.
.IP "memwrite( ADDR, STRING, POS, SIZE )" 4
.IX Item "memwrite( ADDR, STRING, POS, SIZE )"
Writes SIZE bytes from STRING to a memory segment at ADDR starting at
position POS. If STRING is too long, only SIZE bytes are used; if STRING
is too short, nulls are written to fill out SIZE bytes. Returns true if
successful, or false if there is an error.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
IPC::Msg, IPC::Semaphore, IPC::SharedMem, \fBftok\fR\|(3), \fBshmat\fR\|(2), \fBshmdt\fR\|(2)
.SH AUTHORS
.IX Header "AUTHORS"
Graham Barr <gbarr@pobox.com>,
Jarkko Hietaniemi <jhi@iki.fi>,
Marcus Holland-Moritz <mhx@cpan.org>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Version 2.x, Copyright (C) 2007\-2013, Marcus Holland-Moritz.
.PP
Version 1.x, Copyright (c) 1997, Graham Barr.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

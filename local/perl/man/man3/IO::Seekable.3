.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "IO::Seekable 3"
.TH IO::Seekable 3 2023-05-26 "perl v5.38.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
IO::Seekable \- supply seek based methods for I/O objects
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\&    use IO::Seekable;
\&    package IO::Something;
\&    @ISA = qw(IO::Seekable);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\f(CW\*(C`IO::Seekable\*(C'\fR does not have a constructor of its own as it is intended to
be inherited by other \f(CW\*(C`IO::Handle\*(C'\fR based objects. It provides methods
which allow seeking of the file descriptors.
.ie n .IP $io\->getpos 4
.el .IP \f(CW$io\fR\->getpos 4
.IX Item "$io->getpos"
Returns an opaque value that represents the current position of the
IO::File, or \f(CW\*(C`undef\*(C'\fR if this is not possible (eg an unseekable stream such
as a terminal, pipe or socket). If the \fBfgetpos()\fR function is available in
your C library it is used to implements getpos, else perl emulates getpos
using C's \fBftell()\fR function.
.ie n .IP $io\->setpos 4
.el .IP \f(CW$io\fR\->setpos 4
.IX Item "$io->setpos"
Uses the value of a previous getpos call to return to a previously visited
position. Returns "0 but true" on success, \f(CW\*(C`undef\*(C'\fR on failure.
.PP
See perlfunc for complete descriptions of each of the following
supported \f(CW\*(C`IO::Seekable\*(C'\fR methods, which are just front ends for the
corresponding built-in functions:
.ie n .IP "$io\->seek ( POS, WHENCE )" 4
.el .IP "\f(CW$io\fR\->seek ( POS, WHENCE )" 4
.IX Item "$io->seek ( POS, WHENCE )"
Seek the IO::File to position POS, relative to WHENCE:
.RS 4
.IP "WHENCE=0 (SEEK_SET)" 8
.IX Item "WHENCE=0 (SEEK_SET)"
POS is absolute position. (Seek relative to the start of the file)
.IP "WHENCE=1 (SEEK_CUR)" 8
.IX Item "WHENCE=1 (SEEK_CUR)"
POS is an offset from the current position. (Seek relative to current)
.IP "WHENCE=2 (SEEK_END)" 8
.IX Item "WHENCE=2 (SEEK_END)"
POS is an offset from the end of the file. (Seek relative to end)
.RE
.RS 4
.Sp
The SEEK_* constants can be imported from the \f(CW\*(C`Fcntl\*(C'\fR module if you
don't wish to use the numbers \f(CW0\fR \f(CW1\fR or \f(CW2\fR in your code.
.Sp
Returns \f(CW1\fR upon success, \f(CW0\fR otherwise.
.RE
.ie n .IP "$io\->sysseek( POS, WHENCE )" 4
.el .IP "\f(CW$io\fR\->sysseek( POS, WHENCE )" 4
.IX Item "$io->sysseek( POS, WHENCE )"
Similar to \f(CW$io\fR\->seek, but sets the IO::File's position using the system
call \fBlseek\fR\|(2) directly, so will confuse most perl IO operators except
sysread and syswrite (see perlfunc for full details)
.Sp
Returns the new position, or \f(CW\*(C`undef\*(C'\fR on failure.  A position
of zero is returned as the string \f(CW"0 but true"\fR
.ie n .IP $io\->tell 4
.el .IP \f(CW$io\fR\->tell 4
.IX Item "$io->tell"
Returns the IO::File's current position, or \-1 on error.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perlfunc, 
"I/O Operators" in perlop,
IO::Handle
IO::File
.SH HISTORY
.IX Header "HISTORY"
Derived from FileHandle.pm by Graham Barr <gbarr@pobox.com>

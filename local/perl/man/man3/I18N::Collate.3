.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "I18N::Collate 3"
.TH I18N::Collate 3 2019-02-18 "perl v5.38.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
I18N::Collate \- compare 8\-bit scalar data according to the current locale
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\&    use I18N::Collate;
\&    setlocale(LC_COLLATE, \*(Aqlocale\-of\-your\-choice\*(Aq);
\&    $s1 = I18N::Collate\->new("scalar_data_1");
\&    $s2 = I18N::Collate\->new("scalar_data_2");
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
.Vb 1
\&  ***
\&
\&  WARNING: starting from the Perl version 5.003_06
\&  the I18N::Collate interface for comparing 8\-bit scalar data
\&  according to the current locale
\&
\&        HAS BEEN DEPRECATED
\&
\&  That is, please do not use it anymore for any new applications
\&  and please migrate the old applications away from it because its
\&  functionality was integrated into the Perl core language in the
\&  release 5.003_06.
\&
\&  See the perllocale manual page for further information.
\&
\&  ***
.Ve
.PP
This module provides you with objects that will collate
according to your national character set, provided that the
POSIX \fBsetlocale()\fR function is supported on your system.
.PP
You can compare \f(CW$s1\fR and \f(CW$s2\fR above with
.PP
.Vb 1
\&    $s1 le $s2
.Ve
.PP
to extract the data itself, you'll need a dereference: $$s1
.PP
This module uses \fBPOSIX::setlocale()\fR. The basic collation conversion is
done by \fBstrxfrm()\fR which terminates at NUL characters being a decent C
routine.  \fBcollate_xfrm()\fR handles embedded NUL characters gracefully.
.PP
The available locales depend on your operating system; try whether
\&\f(CW\*(C`locale \-a\*(C'\fR shows them or man pages for "locale" or "nlsinfo" or the
direct approach \f(CW\*(C`ls /usr/lib/nls/loc\*(C'\fR or \f(CW\*(C`ls /usr/lib/nls\*(C'\fR or
\&\f(CW\*(C`ls /usr/lib/locale\*(C'\fR.  Not all the locales that your vendor supports
are necessarily installed: please consult your operating system's
documentation and possibly your local system administration.  The
locale names are probably something like \f(CW\*(C`xx_XX.(ISO)?8859\-N\*(C'\fR or
\&\f(CW\*(C`xx_XX.(ISO)?8859N\*(C'\fR, for example \f(CW\*(C`fr_CH.ISO8859\-1\*(C'\fR is the Swiss (CH)
variant of French (fr), ISO Latin (8859) 1 (\-1) which is the Western
European character set.

.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Time 3"
.TH Net::Time 3 2023-05-26 "perl v5.38.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Net::Time \- time and daytime network client interface
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Net::Time qw(inet_time inet_daytime);
\&
\&    print inet_time();          # use default host from Net::Config
\&    print inet_time(\*(Aqlocalhost\*(Aq);
\&    print inet_time(\*(Aqlocalhost\*(Aq, \*(Aqtcp\*(Aq);
\&
\&    print inet_daytime();       # use default host from Net::Config
\&    print inet_daytime(\*(Aqlocalhost\*(Aq);
\&    print inet_daytime(\*(Aqlocalhost\*(Aq, \*(Aqtcp\*(Aq);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Net::Time\*(C'\fR provides subroutines that obtain the time on a remote machine.
.SS Functions
.IX Subsection "Functions"
.ie n .IP """inet_time([$host[, $protocol[, $timeout]]])""" 4
.el .IP "\f(CWinet_time([$host[, $protocol[, $timeout]]])\fR" 4
.IX Item "inet_time([$host[, $protocol[, $timeout]]])"
Obtain the time on \f(CW$host\fR, or some default host if \f(CW$host\fR is not given
or not defined, using the protocol as defined in RFC868. The optional
argument \f(CW$protocol\fR should define the protocol to use, either \f(CW\*(C`tcp\*(C'\fR or
\&\f(CW\*(C`udp\*(C'\fR. The result will be a time value in the same units as returned
by \fBtime()\fR or \fIundef\fR upon failure.
.ie n .IP """inet_daytime([$host[, $protocol[, $timeout]]])""" 4
.el .IP "\f(CWinet_daytime([$host[, $protocol[, $timeout]]])\fR" 4
.IX Item "inet_daytime([$host[, $protocol[, $timeout]]])"
Obtain the time on \f(CW$host\fR, or some default host if \f(CW$host\fR is not given
or not defined, using the protocol as defined in RFC867. The optional
argument \f(CW$protocol\fR should define the protocol to use, either \f(CW\*(C`tcp\*(C'\fR or
\&\f(CW\*(C`udp\*(C'\fR. The result will be an ASCII string or \fIundef\fR upon failure.
.SH EXPORTS
.IX Header "EXPORTS"
The following symbols are, or can be, exported by this module:
.IP "Default Exports" 4
.IX Item "Default Exports"
\&\fINone\fR.
.IP "Optional Exports" 4
.IX Item "Optional Exports"
\&\f(CW\*(C`inet_time\*(C'\fR,
\&\f(CW\*(C`inet_daytime\*(C'\fR.
.IP "Export Tags" 4
.IX Item "Export Tags"
\&\fINone\fR.
.SH "KNOWN BUGS"
.IX Header "KNOWN BUGS"
\&\fINone\fR.
.SH AUTHOR
.IX Header "AUTHOR"
Graham Barr <gbarr@pobox.com <mailto:gbarr@pobox.com>>.
.PP
Steve Hay <shay@cpan.org <mailto:shay@cpan.org>> is now maintaining
libnet as of version 1.22_02.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (C) 1995\-2004 Graham Barr.  All rights reserved.
.PP
Copyright (C) 2014, 2020 Steve Hay.  All rights reserved.
.SH LICENCE
.IX Header "LICENCE"
This module is free software; you can redistribute it and/or modify it under the
same terms as Perl itself, i.e. under the terms of either the GNU General Public
License or the Artistic License, as specified in the \fILICENCE\fR file.
.SH VERSION
.IX Header "VERSION"
Version 3.15
.SH DATE
.IX Header "DATE"
20 March 2023
.SH HISTORY
.IX Header "HISTORY"
See the \fIChanges\fR file.

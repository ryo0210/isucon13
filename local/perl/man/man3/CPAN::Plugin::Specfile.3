.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CPAN::Plugin::Specfile 3"
.TH CPAN::Plugin::Specfile 3 2020-05-19 "perl v5.38.0" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
CPAN::Plugin::Specfile \- Proof of concept implementation of a trivial CPAN::Plugin
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  # once in the cpan shell
\&  o conf plugin_list push CPAN::Plugin::Specfile
\&
\&  # make permanent
\&  o conf commit
\&
\&  # any time in the cpan shell to write a spec file
\&  test Acme::Meta
\&
\&  # disable
\&  # if it is the last in plugin_list:
\&  o conf plugin_list pop
\&  # otherwise, determine the index to splice:
\&  o conf plugin_list
\&  # and then use splice, e.g. to splice position 3:
\&  o conf plugin_list splice 3 1
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Implemented as a post-test hook, this plugin writes a specfile after
every successful test run. The content is also written to the
terminal.
.PP
As a side effect, the timestamps of the written specfiles reflect the
linear order of all dependencies.
.PP
\&\fBWARNING:\fR This code is just a small demo how to use the plugin
system of the CPAN shell, not a full fledged spec file writer. Do not
expect new features in this plugin.
.SS OPTIONS
.IX Subsection "OPTIONS"
The target directory to store the spec files in can be set using \f(CW\*(C`dir\*(C'\fR
as in
.PP
.Vb 1
\&  o conf plugin_list push CPAN::Plugin::Specfile=dir,/tmp/specfiles\-000042
.Ve
.PP
The default directory for this is the
\&\f(CW\*(C`plugins/CPAN::Plugin::Specfile\*(C'\fR directory in the \fIcpan_home\fR
directory.
.SH AUTHOR
.IX Header "AUTHOR"
Andreas Koenig <andk@cpan.org>, Branislav Zahradnik <barney@cpan.org>

# # To limit exposure to denial of service attacks, change the host in endpoints below from 0.0.0.0 to a specific network interface.
# # See https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/security-best-practices.md#safeguards-against-denial-of-service-attacks

# extensions:
#   health_check:
#   pprof:
#     endpoint: 0.0.0.0:1777
#   zpages:
#     endpoint: 0.0.0.0:55679
# receivers:
#   otlp:
#     protocols:
#       grpc:
#         endpoint: 0.0.0.0:4317
#       http:
#         endpoint: 0.0.0.0:4318
#   opencensus:
#     endpoint: 0.0.0.0:55678
#   # Collect own metrics
#   prometheus:
#     config:
#       scrape_configs:
#       - job_name: 'otel-collector'
#         scrape_interval: 10s
#         static_configs:
#         - targets: ['0.0.0.0:8888']
#   jaeger:
#     protocols:
#       grpc:
#         endpoint: 0.0.0.0:14250
#       thrift_binary:
#         endpoint: 0.0.0.0:6832
#       thrift_compact:
#         endpoint: 0.0.0.0:6831
#       thrift_http:
#         endpoint: 0.0.0.0:14268

#   zipkin:
#     endpoint: 0.0.0.0:9411

# processors:
#   batch:
#     spanmetrics:
#     metrics_exporter: prometheus

# exporters:
#   prometheus:
#     endpoint: "0.0.0.0:8889"
# # Jaeger supports OTLP directly. The default port for OTLP/gRPC is 4317
#   otlp/jaeger: 
#     endpoint: "jaeger:4318" # using the docker-compose name of the jaeger container
#     tls:
#       insecure: true

# service:
#   pipelines:
#     traces:
#       receivers: [otlp, opencensus, jaeger, zipkin]
#       processors: [batch]
#       exporters: [otlp/jaeger]
#     metrics:
#       receivers: [otlp, opencensus, prometheus]
#       processors: [batch]
#       exporters: [prometheus]
#     logs:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [debug]

#   extensions: [health_check, pprof, zpages]

# -----------------------------------------------------------
# receivers:
#   otlp:
#     protocols:
#       grpc:
#         endpoint: 0.0.0.0:4317
#       http:
#         endpoint: 0.0.0.0:4318
# processors:
#   batch:
#     timeout: 10s
# # exporters:
# #   otlphttp/openobserver:
# #     endpoint: "http://openobserve:5080/api/default"
# #     headers:
# #       Authorization: Basic cm9vdEBleGFtcGxlLmNvbTpDb21wbGV4cGFzcyMxMjM=
# #       stream-name: default
# exporters:
#   prometheus:
#     endpoint: "0.0.0.0:8889"
#   debug:
# service:
#   telemetry:
#     metrics:
#       address: 0.0.0.0:8888
#   pipelines:
#     logs:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [debug]
#     traces:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [debug]
#     metrics:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [prometheus, debug]


# -----------------------------------------------------------

receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
exporters:
  otlp:
    endpoint: jaeger:4318
    tls:
      insecure: true
  prometheus:
    endpoint: "0.0.0.0:9090"
  debug:
processors:
  batch:
service:
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [otlp]
    metrics:
      receivers: [otlp]
      exporters: [prometheus]